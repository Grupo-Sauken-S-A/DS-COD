#BlueJ class context
comment0.params=data\ token
comment0.target=DsCOD(java.lang.String,\ int)
comment0.text=\n\ Main\ constructor,\ loads\ the\ necessary\ providers\n\ \n\ @param\ data\ Location\ of\ the\ module\ or\ the\ cert\n
comment1.params=pin
comment1.target=void\ selectSignatureKey(java.lang.String)
comment1.text=\n\ Select\ key\ from\ stick\n\ \n\ @param\ pin\ Stick\ password\n
comment10.params=args
comment10.target=void\ main(java.lang.String[])
comment10.text=\n\ Main\ method,\ input\ read\ and\ execution\n\ \n\ @param\ args\ Input\ arguments\n
comment2.params=fileName
comment2.target=void\ getSignatureFromFile(java.lang.String)
comment2.text=\n\ Get\ key\ from\ file\n\ \n\ @param\ fileName\ Input\ file\n
comment3.params=dataURL\ fileInput
comment3.target=void\ createXmlSignature(java.lang.String,\ java.lang.String)
comment3.text=\n\ Create\ xml\ signature\n\ \n\ @param\ dataURL\ If\ signing\ COD\ or\ CODEH\n\ @param\ fileInput\ Xml\ to\ sign\n\ @param\ xsd\ Schema\n
comment4.params=doc
comment4.target=void\ getURI(org.w3c.dom.Document)
comment4.text=\n\ Get\ \ reference\ URI\ of\ the\ signature\n\ \n\ @param\ doc\ Xml\ document\n\ @return\ the\ reference\ URI\ of\ the\ signature\n
comment5.params=fileName
comment5.target=java.security.cert.X509Certificate\ loadPublicX509(java.lang.String)
comment5.text=\n\ Load\ certificate\n\ \n\ @param\ fileName\ Location/Name\ of\ the\ cert\n\ @return\ the\ loaded\ certificate\n\ @throws\ IOException\n\ @throws\ GeneralSecurityException\n
comment6.params=fileName
comment6.target=java.security.PrivateKey\ loadPrivateKey(java.lang.String)
comment6.text=\n\ Load\ private\ key\ from\ cert\n\ \n\ @param\ fileName\ Location/Name\ of\ the\ cert\n\ @return\ the\ loaded\ private\ key\n\ @throws\ IOException\n\ @throws\ GeneralSecurityException\n
comment7.params=is
comment7.target=void\ closeSilent(java.io.InputStream)
comment7.text=\n\ Close\ input\ stream\n\ \n\ @param\ is\ Input\ stream\n
comment8.params=args
comment8.target=void\ writeResult(java.lang.String[])
comment8.text=\n\ Write\ results\ to\ a\ file\n\ \n\ @param\ args\ Input\ arguments\ to\ read\ the\ output\n
comment9.params=fileName\ id
comment9.target=boolean\ verifySignature(java.lang.String,\ int)
numComments=11
